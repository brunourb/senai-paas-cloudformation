#https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: Projeto exemplo de como construir uma stack de serviços dentro da AWS


#Podemos passar 'paramêtros' para o cloudformation 'provisionar' e assim não colocarmos código 'fixo' na construção
# do projeto

Parameters:
#Passo 1
  SnsName:
    Type: String
    Description: Nome da SNS
    Default: sns-iot-consumo-energia

#Passo 2
  SqsQueueDqlName:
    Type: String
    Description: Nome da DLQ (Dead Letter Queue)
    Default: sqs-iot-consumo-energia-dlq

#Passo 3
  SqsQueueName:
    Type: String
    Description: Nome da fila principal
    Default: sqs-iot-consumo-energia

#Passo 6.1
#https://github.com/aws-samples/aws-cloudformation-inline-python-lambda-example/blob/main/base-cfn-lambda.yml
  LambdaName:
    Type: String
    Description: Nome da Lambda
    Default: iot-consumo-energia-lambda
    MinLength: '1'
    MaxLength: '128'

  S3Bucket:
    Type: String
    Description: Nome do bucket
    Default: inserir-um-nome-unico-globalmente

  S3Key:
    Type: String
    Description: Nome do arquivo
    Default: iot-consumo-energia.zip

################################################################################
Resources:
  #Passo 1 -- Definição do tópico
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Ref SnsName
      TopicName: !Ref SnsName

  #Passo 2 -- Definição da fila morta (Dead Letter Queue)
  SQSDlqQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref SqsQueueDqlName
    
  #Passo 3 -- Definição da fila 'principal'
  SQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref SqsQueueName
      RedrivePolicy:
        # Referência da fila morta para que a 'fila principal', possa mandar mensagem
        deadLetterTargetArn: !GetAtt SQSDlqQueue.Arn
        #Número de tentativas antes de enviar a mensagem para a fila morta
        maxReceiveCount: 5

  #Passo 4 Permite que o tópico possa enviar mensagem para a fila
  SQSPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref SQSQueue
      PolicyDocument:
        Statement:
          - Sid: Permite que a SNS faça a publicação (envio de mensagem) para uma fila
            Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action:
              - "SQS:SendMessage"
            Resource: "*"
            Condition:
              ArnEquals:
                aws:SourceArn:
                  !Ref SNSTopic

  #Passo 5 - Vincular a FILA para o TÓPICO.
  #Quando a mensagem for recebida pelo TÓPICO, ela será direcionada para a fila.
  SQSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt SQSQueue.Arn
      Protocol: sqs
      RawMessageDelivery: True
      TopicArn: !Ref SNSTopic

  #Passo 6.0 - Declarar o uso do bucket para fazer vínculo na lambda
  #S3Bucket:
  #  Type: AWS::S3::Bucket
  #  Description: texto qualquer
  #  Properties:
  #    BucketName: inserir-um-nome-unico-globalmente
      #VersioningConfiguration:
      #  Status: Enabled
  
  #Passo 6.1 - Declaração da lambda para fazer vínculo com o event source mapping
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: "lambda.handler"
      Role: 'arn:aws:iam::058264301464:role/LabRole'
      #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Ref S3Key
      Runtime: "python3.9"
      FunctionName: !Ref LambdaName #Usa a referência de atributo declarada anteriormente.
      MemorySize: 128
      Timeout: 30
      Environment:
        Variables:
          VARIAVEL_1: !Ref LambdaName
          VARIAVEL_2: !Ref SNSTopic
          VARIAVEL_3: !Ref SNSTopic

  #Passo 6.2 - Fazer o vínculo da fila para a função
  # Assim, quando uma mensagem 'chegar' na fila, ela será 'enviada' para a função
  FunctionEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      #Número de mensagem enviada para a fila (sqs)
      BatchSize: 10
      #Origem da mensagem
      EventSourceArn: !GetAtt SQSQueue.Arn
      #Destino da mensagem
      FunctionName: !GetAtt LambdaFunction.Arn